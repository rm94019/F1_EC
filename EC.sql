-- Generated by Oracle SQL Developer Data Modeler 21.4.1.349.1605
--   at:        2022-03-16 20:46:08 BRT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

/**/

DROP TABLE t_ec_agenda CASCADE CONSTRAINTS;
DROP TABLE t_ec_cadastro CASCADE CONSTRAINTS;
DROP TABLE t_ec_cat_maquinas CASCADE CONSTRAINTS;
DROP TABLE t_ec_cat_visita CASCADE CONSTRAINTS;
DROP TABLE t_ec_email_cad CASCADE CONSTRAINTS;
DROP TABLE t_ec_empresa CASCADE CONSTRAINTS;
DROP TABLE t_ec_endereco CASCADE CONSTRAINTS;
DROP TABLE t_ec_iot CASCADE CONSTRAINTS;
DROP TABLE t_ec_maquina_iot CASCADE CONSTRAINTS;
DROP TABLE t_ec_maquinas CASCADE CONSTRAINTS;
DROP TABLE t_ec_proprietario CASCADE CONSTRAINTS;
DROP TABLE t_ec_ramo_emp CASCADE CONSTRAINTS;
DROP TABLE t_ec_status_maquina CASCADE CONSTRAINTS;
DROP TABLE t_ec_status_visita CASCADE CONSTRAINTS;
DROP TABLE t_ec_telefone_cad CASCADE CONSTRAINTS;
DROP TABLE t_ec_tipo_cliente CASCADE CONSTRAINTS;
DROP TABLE t_ec_visita CASCADE CONSTRAINTS;
DROP TABLE t_ec_genero CASCADE CONSTRAINTS;
DROP TABLE t_ec_tipo_cad CASCADE CONSTRAINTS;
DROP TABLE t_ec_emp_prop CASCADE CONSTRAINTS;
DROP TABLE t_ec_status CASCADE CONSTRAINTS;
DROP TABLE t_ec_fornecedor_iot CASCADE CONSTRAINTS;
DROP TABLE t_ec_fab_maquinas CASCADE CONSTRAINTS;
DROP TABLE t_ec_cep_correios CASCADE CONSTRAINTS;
DROP TABLE t_ec_pais CASCADE CONSTRAINTS;


DROP SEQUENCE T_EC_CAT_MAQUINAS_COD_CATEGORI ;
DROP SEQUENCE T_EC_CAT_VISITA_COD_CAT_VISITA;
DROP SEQUENCE T_EC_RAMO_EMP_COD_RAMO_SEQ;
DROP SEQUENCE T_EC_STATUS_MAQUINA_COD_STATUS;
DROP SEQUENCE T_EC_STATUS_VISITA_COD_STATUS_;
DROP SEQUENCE T_EC_STATUS_COD_STATUS_SEQ;
DROP SEQUENCE T_EC_CADASTRO_COD_CADASTRO_SEQ;
DROP SEQUENCE T_EC_IOT_COD_IOT_SEQ;
DROP SEQUENCE T_EC_FORNECEDOR_IOT_COD_FORNEC;
DROP SEQUENCE T_EC_FAB_MAQUINAS_COD_FABRICAN;
DROP SEQUENCE  T_EC_PAIS_COD_PAIS_SEQ;
DROP SEQUENCE T_EC_ENDERECO_COD_ENDERECO_SEQ;
DROP SEQUENCE  T_EC_MAQUINAS_COD_MAQUINA_SEQ;

CREATE TABLE t_ec_pais (
    cod_pais NUMBER NOT NULL,
    nm_pais  VARCHAR2(75) NOT NULL
);

ALTER TABLE t_ec_pais ADD CONSTRAINT t_ec_pais_pk PRIMARY KEY ( cod_pais );
ALTER TABLE t_ec_pais ADD CONSTRAINT t_ec_pais__un UNIQUE ( nm_pais );


CREATE TABLE t_ec_cep_correios (
    cep_correios  CHAR(8) NOT NULL,
    nm_logradouro VARCHAR2(100),
    nm_bairro     VARCHAR2(50),
    nm_cidade     VARCHAR2(50) NOT NULL,
    nm_uf         CHAR(2) NOT NULL,
    cod_pais      NUMBER DEFAULT 1 NOT NULL
);

ALTER TABLE t_ec_cep_correios ADD CONSTRAINT t_ec_cep_correios_pk PRIMARY KEY ( cep_correios );




CREATE TABLE t_ec_fab_maquinas (
    cod_fabricante NUMBER(5) NOT NULL,
    nm_fabricante  VARCHAR2(100) NOT NULL
);

ALTER TABLE t_ec_fab_maquinas ADD CONSTRAINT t_ec_fab_maquinas_pk PRIMARY KEY ( cod_fabricante );
ALTER TABLE t_ec_fab_maquinas ADD CONSTRAINT t_ec_fab_maq_nome_fab_un UNIQUE ( nm_fabricante );


CREATE TABLE t_ec_fornecedor_iot (
    cod_fornecedor_iot NUMBER(5) NOT NULL,         
    ds_fornecedor      VARCHAR2(75) NOT NULL
);

ALTER TABLE t_ec_fornecedor_iot ADD CONSTRAINT t_ec_fornecedor_iot_cod_pk PRIMARY KEY ( cod_fornecedor_iot );
ALTER TABLE t_ec_fornecedor_iot ADD CONSTRAINT t_ec_fornecedor_iot_ds_un UNIQUE ( ds_fornecedor );

CREATE TABLE t_ec_tipo_cad (
    cod_tipo_cad CHAR(1) NOT NULL,
    ds_tipo_cad  VARCHAR2(25)
);

ALTER TABLE t_ec_tipo_cad ADD CONSTRAINT t_ec_tipo_cad_pk PRIMARY KEY ( cod_tipo_cad );

CREATE TABLE t_ec_genero (
    cod_genero CHAR(1) NOT NULL,
    ds_genero  VARCHAR2(15)
);

ALTER TABLE t_ec_genero ADD CONSTRAINT t_ec_genero_pk PRIMARY KEY ( cod_genero );

CREATE TABLE t_ec_agenda (
    cod_agenda           NUMBER(10) NOT NULL,
    dthr_visita          DATE NOT NULL,
    vlr_desconto         NUMBER(10, 2),
    ds_resumo            LONG,
    cod_endereco         NUMBER(5) NOT NULL,
    cod_cat_visita       NUMBER NOT NULL,
    cod_cad_proprietario NUMBER(5) NOT NULL,
    cod_cad_empresa      NUMBER(5) NOT NULL
);

CREATE UNIQUE INDEX t_ec_agenda__idx ON
    t_ec_agenda (
        cod_endereco
    ASC );

ALTER TABLE t_ec_agenda ADD CONSTRAINT t_ec_agenda_pk PRIMARY KEY ( cod_agenda );


CREATE TABLE t_ec_cadastro (
    cod_cadastro        NUMBER(5) NOT NULL,
    nm_nome             VARCHAR2(155) NOT NULL,
    nm_apelido_fantasia VARCHAR2(155) NOT NULL,
    cod_tipo_cad        CHAR(1) NOT NULL
);

ALTER TABLE t_ec_cadastro ADD CONSTRAINT t_ec_cadastro_pk PRIMARY KEY ( cod_cadastro );



CREATE TABLE t_ec_cat_maquinas (
    cod_categoria_maq NUMBER(5) NOT NULL,
    nm_categoria      VARCHAR2(100) NOT NULL
);

COMMENT ON COLUMN t_ec_cat_maquinas.nm_categoria IS
    'categorias são:  Injetora Hidráulica (plástico ou metal); Injetora Elétrica (plástico ou metal); Injetora Híbrida (plástico ou metal); Prensa; Máquina de Corte e Solda';

ALTER TABLE t_ec_cat_maquinas ADD CONSTRAINT t_ec_cat_maquinas_pk PRIMARY KEY ( cod_categoria_maq );

CREATE TABLE t_ec_cat_visita (
    cod_cat_visita NUMBER NOT NULL,
    nm_visita      VARCHAR2(45) NOT NULL
);

COMMENT ON COLUMN t_ec_cat_visita.cod_cat_visita IS
    'Algumas visitas são cobradas dos clientes (manutenção, suporte, consultoria) e descontos podem ser concedidos. Visitas de prospecção e reunião executiva não têm investimento a ser feito pela empresa.';



ALTER TABLE t_ec_cat_visita ADD CONSTRAINT t_ec_cat_visita_pk PRIMARY KEY ( cod_cat_visita );

CREATE TABLE t_ec_email_cad (
    cod_email    NUMBER(5) NOT NULL,
    cod_cadastro NUMBER(5) NOT NULL,
    email        VARCHAR2(100) NOT NULL,
    cod_status   NUMBER(5) NOT NULL
);

ALTER TABLE t_ec_email_cad ADD CONSTRAINT t_ec_email_cad_pk PRIMARY KEY ( cod_email,
                                                                          cod_cadastro );

CREATE TABLE t_ec_empresa (
    cod_cadastro NUMBER(5) NOT NULL,
    nr_cnpj      NUMBER(14) NOT NULL,
    dt_fundacao  DATE,
    ds_origem    VARCHAR2(50),
    cod_ramo     NUMBER(5) NOT NULL,
    cod_tipo_cli CHAR(1) NOT NULL
);

CREATE UNIQUE INDEX t_ec_empresa__idx ON
    t_ec_empresa (
        cod_tipo_cli
    ASC );

ALTER TABLE t_ec_empresa ADD CONSTRAINT t_ec_empresa_pk PRIMARY KEY ( cod_cadastro );

CREATE TABLE t_ec_endereco (
    cod_endereco     NUMBER(5) NOT NULL,
    cod_cadastro     NUMBER(5) NOT NULL,
    nm_logradouro    VARCHAR2(155),
    numero           VARCHAR2(10) NOT NULL,
    complemento      VARCHAR2(75),
    cep_correios CHAR(8) NOT NULL
);
ALTER TABLE t_ec_endereco ADD CONSTRAINT t_ec_endereco_pk PRIMARY KEY ( cod_endereco );

CREATE TABLE t_ec_iot (
    cod_iot            NUMBER(5) NOT NULL,
    nr_serie           NUMBER(20) NOT NULL,   
    cod_fornecedor_iot NUMBER(5) NOT NULL
);

ALTER TABLE t_ec_iot ADD CONSTRAINT t_ec_iot_pk PRIMARY KEY ( cod_iot );

CREATE TABLE t_ec_maquina_iot (
    cod_iot       NUMBER(5) NOT NULL,
    cod_maquina   NUMBER(5) NOT NULL,
    dt_instalacao DATE NOT NULL,
    dt_saida      DATE,
    cod_cadastro  NUMBER(5) NOT NULL
);

ALTER TABLE t_ec_maquina_iot ADD CONSTRAINT t_ec_maquina_iot_pk PRIMARY KEY ( cod_maquina,
                                                                              cod_iot );
CREATE TABLE t_ec_maquinas (
    cod_maquina        NUMBER(5) NOT NULL,
    cod_cadastro       NUMBER(5),
    nm_maquina         VARCHAR2(255) NOT NULL,
    nr_serie_maquina  NUMBER(20) NOT NULL,
    nr_ano_fab         NUMBER(4) NOT NULL,
    nr_voltagem        NUMBER(3) NOT NULL,
    cod_categoria_maq  NUMBER(5) NOT NULL,
    cod_status_maquina NUMBER(2) NOT NULL,
    cod_fabricante     NUMBER(5) NOT NULL,
    cod_tipo_cli       CHAR(1) NOT NULL,
    cod_pais           NUMBER DEFAULT 1 NOT NULL
);

ALTER TABLE t_ec_maquinas ADD CONSTRAINT t_ec_maquinas_ck_1 CHECK ( cod_tipo_cli = 'C' );
ALTER TABLE t_ec_maquinas ADD CONSTRAINT t_ec_maquinas__un UNIQUE ( nr_serie_maquina );
ALTER TABLE t_ec_maquinas ADD CONSTRAINT t_ec_maquinas_pk PRIMARY KEY ( cod_maquina, cod_cadastro  );



CREATE TABLE t_ec_proprietario (
    cod_cadastro  NUMBER(5) NOT NULL,
    dt_nascimento DATE NOT NULL,
    cod_genero    CHAR(1) NOT NULL
);

ALTER TABLE t_ec_proprietario ADD CONSTRAINT t_ec_proprietario_pk PRIMARY KEY ( cod_cadastro );



CREATE TABLE t_ec_ramo_emp (
    cod_ramo NUMBER(5) NOT NULL,
    nm_ramo  VARCHAR2(50) NOT NULL
);



ALTER TABLE t_ec_ramo_emp ADD CONSTRAINT t_ec_ramo_emp_pk PRIMARY KEY ( cod_ramo );

CREATE TABLE t_ec_status_maquina (
    cod_status_maquina NUMBER(2) NOT NULL,
    ds_status_maquina  VARCHAR2(25) NOT NULL
);

COMMENT ON COLUMN t_ec_status_maquina.cod_status_maquina IS
    '1: Ativa, 2: Inativa';

ALTER TABLE t_ec_status_maquina ADD CONSTRAINT t_ec_status_maquina_pk PRIMARY KEY ( cod_status_maquina );

CREATE TABLE t_ec_status_visita (
    cod_status_visita NUMBER(5) NOT NULL,
    ds_status_visita  VARCHAR2(25) NOT NULL
);

COMMENT ON COLUMN t_ec_status_visita.cod_status_visita IS
    'CONCLUÍDO, PENDENTE, EM ABERTO, EM ATENDIMENTO, FREEZE e OUTROS.';



ALTER TABLE t_ec_status_visita ADD CONSTRAINT t_ec_status_visita_pk PRIMARY KEY ( cod_status_visita );

CREATE TABLE t_ec_telefone_cad (
    cod_telefone NUMBER(5) NOT NULL,
    cod_cadastro NUMBER(5) NOT NULL,
    ddi          VARCHAR2(5),
    ddd          CHAR(2) NOT NULL,
    telefone     VARCHAR2(15) NOT NULL,
    cod_status   NUMBER(5) NOT NULL
);

ALTER TABLE t_ec_telefone_cad ADD CONSTRAINT t_ec_telefone_cad_pk PRIMARY KEY ( cod_telefone,
                                                                                cod_cadastro );

CREATE TABLE t_ec_tipo_cliente (
    cod_tipo_cli    CHAR(1) NOT NULL,
    ds_tipo_cliente VARCHAR2(25)
);



ALTER TABLE t_ec_tipo_cliente ADD CONSTRAINT t_ec_tipo_cliente_pk PRIMARY KEY ( cod_tipo_cli );
ALTER TABLE t_ec_tipo_cliente ADD CONSTRAINT t_ec_tipo_cliente__un UNIQUE ( ds_tipo_cliente );

CREATE TABLE t_ec_visita (
    cod_visita        NUMBER NOT NULL,
    cod_agenda        NUMBER(10) NOT NULL,
    dthr_atendimento  DATE NOT NULL,
    dthr_termino      DATE,
    horas_visita      NUMBER,
    ds_laudo          CLOB,
    cod_status_visita NUMBER(5) NOT NULL
);

CREATE UNIQUE INDEX t_ec_visita__idx ON
    t_ec_visita (
        cod_agenda
    ASC );

ALTER TABLE t_ec_visita ADD CONSTRAINT t_ec_visita_pk PRIMARY KEY ( cod_visita );

CREATE TABLE t_ec_emp_prop (
    cod_cad_proprietario NUMBER(5) NOT NULL,
    cod_cad_empresa      NUMBER(5) NOT NULL,
    dt_entrada           DATE NOT NULL,
    dt_saida             DATE
);

ALTER TABLE t_ec_emp_prop ADD CONSTRAINT t_ec_emp_prop_pk PRIMARY KEY ( cod_cad_proprietario,
                                                                          cod_cad_empresa );

CREATE TABLE t_ec_status (
    cod_status NUMBER(5) NOT NULL,
    ds_status  VARCHAR2(15)
);

COMMENT ON COLUMN t_ec_status.ds_status IS
    '1: Ativado, 2: Desativado';


ALTER TABLE t_ec_status ADD CONSTRAINT t_ec_status_pk PRIMARY KEY ( cod_status );


-- Foreign Keys

ALTER TABLE t_ec_iot
    ADD CONSTRAINT t_ec_fornecedor_iot_fk FOREIGN KEY ( cod_fornecedor_iot )
        REFERENCES t_ec_fornecedor_iot ( cod_fornecedor_iot );
        
ALTER TABLE t_ec_visita
    ADD CONSTRAINT t_ec_agenda_fk FOREIGN KEY ( cod_agenda )
        REFERENCES t_ec_agenda ( cod_agenda );

ALTER TABLE t_ec_empresa
    ADD CONSTRAINT t_ec_cadastro_fk FOREIGN KEY ( cod_cadastro )
        REFERENCES t_ec_cadastro ( cod_cadastro );
        
ALTER TABLE t_ec_empresa
    ADD CONSTRAINT t_ec_ramo_emp_fk FOREIGN KEY ( cod_ramo )
        REFERENCES t_ec_ramo_emp ( cod_ramo );

ALTER TABLE t_ec_empresa
    ADD CONSTRAINT t_ec_tipo_cliente_fk FOREIGN KEY ( cod_tipo_cli )
        REFERENCES t_ec_tipo_cliente ( cod_tipo_cli );

ALTER TABLE t_ec_proprietario
    ADD CONSTRAINT t_ec_cadastro_fkv2 FOREIGN KEY ( cod_cadastro )
        REFERENCES t_ec_cadastro ( cod_cadastro );

ALTER TABLE t_ec_telefone_cad
    ADD CONSTRAINT t_ec_cadastro_fkv3 FOREIGN KEY ( cod_cadastro )
        REFERENCES t_ec_cadastro ( cod_cadastro );

ALTER TABLE t_ec_email_cad
    ADD CONSTRAINT t_ec_cadastro_fkv4 FOREIGN KEY ( cod_cadastro )
        REFERENCES t_ec_cadastro ( cod_cadastro );

ALTER TABLE t_ec_maquinas
    ADD CONSTRAINT t_ec_cat_maquinas_fk FOREIGN KEY ( cod_categoria_maq )
        REFERENCES t_ec_cat_maquinas ( cod_categoria_maq );

ALTER TABLE t_ec_maquinas
    ADD CONSTRAINT t_ec_tipo_cliente_fkv2 FOREIGN KEY ( cod_tipo_cli )
        REFERENCES t_ec_tipo_cliente ( cod_tipo_cli );
        
ALTER TABLE t_ec_maquinas
    ADD CONSTRAINT t_ec_empresa_fk FOREIGN KEY ( cod_cadastro )
        REFERENCES t_ec_empresa ( cod_cadastro );        

ALTER TABLE t_ec_maquinas
    ADD CONSTRAINT t_ec_status_maquina_fk FOREIGN KEY ( cod_status_maquina )
        REFERENCES t_ec_status_maquina ( cod_status_maquina );
        
ALTER TABLE t_ec_proprietario
    ADD CONSTRAINT t_ec_genero_fk FOREIGN KEY ( cod_genero )
        REFERENCES t_ec_genero ( cod_genero );
        
        
ALTER TABLE t_ec_maquinas
    ADD CONSTRAINT t_ec_fab_maquinas_fk FOREIGN KEY ( cod_fabricante )
        REFERENCES t_ec_fab_maquinas ( cod_fabricante );
        
        
ALTER TABLE t_ec_agenda
    ADD CONSTRAINT t_ec_cat_visita_fk FOREIGN KEY ( cod_cat_visita )
        REFERENCES t_ec_cat_visita ( cod_cat_visita );


ALTER TABLE t_ec_endereco
    ADD CONSTRAINT t_ec_empresa_fkv2 FOREIGN KEY ( cod_cadastro )
        REFERENCES t_ec_empresa ( cod_cadastro );
        
ALTER TABLE t_ec_endereco
    ADD CONSTRAINT t_ec_cep_correios_fk FOREIGN KEY ( cep_correios )
        REFERENCES t_ec_cep_correios ( cep_correios );

ALTER TABLE t_ec_emp_prop
    ADD CONSTRAINT t_ec_empresa_fkv3 FOREIGN KEY ( cod_cad_empresa )
        REFERENCES t_ec_empresa ( cod_cadastro );

ALTER TABLE t_ec_agenda
    ADD CONSTRAINT t_ec_endereco_fk FOREIGN KEY ( cod_endereco )
        REFERENCES t_ec_endereco ( cod_endereco );

ALTER TABLE t_ec_maquina_iot
    ADD CONSTRAINT t_ec_maquinas_fk FOREIGN KEY ( cod_cadastro,
                                                  cod_maquina )
        REFERENCES t_ec_maquinas ( cod_cadastro,
                                   cod_maquina );

ALTER TABLE t_ec_emp_prop
    ADD CONSTRAINT t_ec_proprietario_fk FOREIGN KEY ( cod_cad_proprietario )
        REFERENCES t_ec_proprietario ( cod_cadastro );

      
ALTER TABLE t_ec_visita
    ADD CONSTRAINT t_ec_status_visita_fk FOREIGN KEY ( cod_status_visita )
        REFERENCES t_ec_status_visita ( cod_status_visita );

ALTER TABLE t_ec_agenda
    ADD CONSTRAINT t_ec_emp_prop_fk FOREIGN KEY ( cod_cad_proprietario,
                                                   cod_cad_empresa )
        REFERENCES t_ec_emp_prop ( cod_cad_proprietario,
                                    cod_cad_empresa );

ALTER TABLE t_ec_email_cad
    ADD CONSTRAINT t_ec_status_fk FOREIGN KEY ( cod_status )
        REFERENCES t_ec_status ( cod_status );

ALTER TABLE t_ec_telefone_cad
    ADD CONSTRAINT t_ec_status_fkv2 FOREIGN KEY ( cod_status )
        REFERENCES t_ec_status ( cod_status );
 
ALTER TABLE t_ec_cadastro
    ADD CONSTRAINT t_ec_tipo_cad_fk FOREIGN KEY ( cod_tipo_cad )
        REFERENCES t_ec_tipo_cad ( cod_tipo_cad );

ALTER TABLE t_ec_cep_correios
    ADD CONSTRAINT t_ec_pais_fk FOREIGN KEY ( cod_pais )
        REFERENCES t_ec_pais ( cod_pais );

-- Unique Constraints

ALTER TABLE t_ec_tipo_cad ADD CONSTRAINT t_ec_tipo_cad__un UNIQUE ( ds_tipo_cad );
ALTER TABLE t_ec_genero ADD CONSTRAINT t_ec_genero__un UNIQUE ( ds_genero );
ALTER TABLE t_ec_status_visita ADD CONSTRAINT t_ec_status_visita__un UNIQUE ( ds_status_visita );
ALTER TABLE t_ec_cat_visita ADD CONSTRAINT t_ec_cat_visita__un UNIQUE ( nm_visita );
ALTER TABLE t_ec_status ADD CONSTRAINT t_ec_status__un UNIQUE ( ds_status );
ALTER TABLE t_ec_ramo_emp ADD CONSTRAINT t_ec_ramo_emp__un UNIQUE ( nm_ramo );
ALTER TABLE t_ec_status_maquina ADD CONSTRAINT t_ec_status_maquina__un UNIQUE ( ds_status_maquina );
ALTER TABLE t_ec_cat_maquinas ADD CONSTRAINT t_ec_cat_maquinas__un UNIQUE ( nm_categoria );


-- Triggers

CREATE OR REPLACE TRIGGER TRIGGER_ec_maquinas BEFORE
    INSERT OR UPDATE OF cod_cadastro ON t_ec_maquinas
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.cod_tipo_cli
    INTO d
    FROM
        t_ec_empresa a
    WHERE
        a.cod_cadastro = :new.cod_cadastro;

    IF ( d IS NULL OR d <> 'C' ) THEN
        raise_application_error(
                               -20223,
                               'Cliente é prospecção ou não existe. FK T_EC_TIPO_CLIENTE_FKv2 na tabela T_EC_MAQUINAS viola constraint T_EC_TIPO_CLIENTE - valor de  COD_TIPO_CLI não é ''C'' : Cliente. Impossível Cadastrar'
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/
-- ARC constraints




CREATE OR REPLACE TRIGGER arc_arc_cad__t_ec_proprietario BEFORE
    INSERT OR UPDATE OF cod_cadastro ON t_ec_proprietario
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.cod_tipo_cad
    INTO d
    FROM
        t_ec_cadastro a
    WHERE
        a.cod_cadastro = :new.cod_cadastro;

    IF ( d IS NULL OR d <> 'P' ) THEN
        raise_application_error(
                               -20223,
                               'FK T_EC_CADASTRO_FKv2 in Table T_EC_PROPRIETARIO violates Arc constraint on Table T_EC_CADASTRO - discriminator column COD_TIPO_CAD doesn''t have value ''P'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_arc_cad_cli_p_t_ec_empresa BEFORE
    INSERT OR UPDATE OF cod_cadastro ON t_ec_empresa
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.cod_tipo_cad
    INTO d
    FROM
        t_ec_cadastro a
    WHERE
        a.cod_cadastro = :new.cod_cadastro;

    IF ( d IS NULL OR d <> 'E' ) THEN
        raise_application_error(
                               -20223,
                               'FK T_EC_CADASTRO_FK in Table T_EC_EMPRESA violates Arc constraint on Table T_EC_CADASTRO - discriminator column COD_TIPO_CAD doesn''t have value ''E'''
        );
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/       
       
    
    
-- Checks Constraints

ALTER TABLE t_ec_maquinas
    ADD CHECK ( nr_voltagem IN ( 110, 220 ) );


ALTER TABLE t_ec_maquinas 
    ADD CHECK ( nr_ano_fab BETWEEN 1900 AND 2099 );
-- Sequences


CREATE SEQUENCE T_EC_PAIS_COD_PAIS_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_PAIS_COD_PAIS_TRG 
BEFORE INSERT ON T_EC_PAIS 
FOR EACH ROW 
WHEN (NEW.COD_PAIS IS NULL) 
BEGIN
:new.cod_pais := t_ec_pais_cod_pais_seq.nextval;

end;
/

CREATE SEQUENCE T_EC_FAB_MAQUINAS_COD_FABRICAN 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_FAB_MAQUINAS_COD_FABRICAN 
BEFORE INSERT ON T_EC_FAB_MAQUINAS 
FOR EACH ROW 
WHEN (NEW.COD_FABRICANTE IS NULL) 
BEGIN
:new.cod_fabricante := t_ec_fab_maquinas_cod_fabrican.nextval;

end;
/



CREATE SEQUENCE T_EC_FORNECEDOR_IOT_COD_FORNEC 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_FORNECEDOR_IOT_COD_FORNEC 
BEFORE INSERT ON T_EC_FORNECEDOR_IOT 
FOR EACH ROW 
WHEN (NEW.COD_FORNECEDOR_IOT IS NULL) 
BEGIN
:new.cod_fornecedor_iot := t_ec_fornecedor_iot_cod_fornec.nextval;

end;
/

CREATE SEQUENCE T_EC_CAT_MAQUINAS_COD_CATEGORI 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_CAT_MAQUINAS_COD_CATEGORI 
BEFORE INSERT ON T_EC_CAT_MAQUINAS 
FOR EACH ROW 
WHEN (NEW.COD_CATEGORIA_MAQ IS NULL) 
BEGIN
:new.cod_categoria_maq := t_ec_cat_maquinas_cod_categori.nextval;

end;
/

CREATE SEQUENCE T_EC_CAT_VISITA_COD_CAT_VISITA 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_CAT_VISITA_COD_CAT_VISITA 
BEFORE INSERT ON T_EC_CAT_VISITA 
FOR EACH ROW 
WHEN (NEW.COD_CAT_VISITA IS NULL) 
BEGIN
:new.cod_cat_visita := t_ec_cat_visita_cod_cat_visita.nextval;

end;
/

CREATE SEQUENCE T_EC_RAMO_EMP_COD_RAMO_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_RAMO_EMP_COD_RAMO_TRG 
BEFORE INSERT ON T_EC_RAMO_EMP 
FOR EACH ROW 
WHEN (NEW.COD_RAMO IS NULL) 
BEGIN
:new.cod_ramo := t_ec_ramo_emp_cod_ramo_seq.nextval;

end;
/

CREATE SEQUENCE T_EC_STATUS_MAQUINA_COD_STATUS 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_STATUS_MAQUINA_COD_STATUS 
BEFORE INSERT ON T_EC_STATUS_MAQUINA 
FOR EACH ROW 
WHEN (NEW.COD_STATUS_MAQUINA IS NULL) 
BEGIN
:new.cod_status_maquina := t_ec_status_maquina_cod_status.nextval;

end;
/

CREATE SEQUENCE T_EC_STATUS_VISITA_COD_STATUS_ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_STATUS_VISITA_COD_STATUS_ 
BEFORE INSERT ON T_EC_STATUS_VISITA 
FOR EACH ROW 
WHEN (NEW.COD_STATUS_VISITA IS NULL) 
BEGIN
:new.cod_status_visita := t_ec_status_visita_cod_status_.nextval;

end;
/

CREATE SEQUENCE t_EC_STATUS_COD_STATUS_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER t_EC_STATUS_COD_STATUS_TRG 
BEFORE INSERT ON t_EC_STATUS 
FOR EACH ROW 
WHEN (NEW.COD_STATUS IS NULL) 
BEGIN
:new.cod_status := t_ec_status_cod_status_seq.nextval;

end;
/


CREATE SEQUENCE T_EC_CADASTRO_COD_CADASTRO_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_CADASTRO_COD_CADASTRO_TRG 
BEFORE INSERT ON T_EC_CADASTRO 
FOR EACH ROW 
WHEN (NEW.COD_CADASTRO IS NULL) 
BEGIN
:new.cod_cadastro := t_ec_cadastro_cod_cadastro_seq.nextval;

end;
/


CREATE SEQUENCE T_EC_IOT_COD_IOT_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_IOT_COD_IOT_TRG 
BEFORE INSERT ON T_EC_IOT 
FOR EACH ROW 
WHEN (NEW.COD_IOT IS NULL) 
BEGIN
:new.cod_iot := t_ec_iot_cod_iot_seq.nextval;

end;
/

CREATE SEQUENCE T_EC_ENDERECO_COD_ENDERECO_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;


CREATE OR REPLACE TRIGGER T_EC_ENDERECO_COD_ENDERECO_TRG 
BEFORE INSERT ON T_EC_ENDERECO 
FOR EACH ROW 
WHEN (NEW.COD_ENDERECO IS NULL) 
DECLARE v_logradouro VARCHAR2(155);
BEGIN
:new.cod_endereco := t_ec_endereco_cod_endereco_seq.nextval;

 SELECT
        a.nm_logradouro
    INTO v_logradouro
    FROM
        t_ec_cep_correios a
    WHERE
        a.cep_correios = :new.cep_correios;


IF ( v_logradouro IS NOT NULL ) THEN
        :new.nm_logradouro := v_logradouro;
END IF;

end;
/



CREATE SEQUENCE T_EC_MAQUINAS_COD_MAQUINA_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER T_EC_MAQUINAS_COD_MAQUINA_TRG 
BEFORE INSERT ON T_EC_MAQUINAS 
FOR EACH ROW 
WHEN (NEW.COD_MAQUINA IS NULL) 
BEGIN
:new.cod_maquina := t_ec_maquinas_cod_maquina_seq.nextval;

end;
/



-- Inserts

INSERT INTO t_ec_status_visita ( ds_status_visita ) VALUES ( 'CONCLUÍDO' );
INSERT INTO t_ec_status_visita ( ds_status_visita ) VALUES ( 'PENDENTE' );
INSERT INTO t_ec_status_visita ( ds_status_visita ) VALUES ( 'EM ABERTO' );
INSERT INTO t_ec_status_visita ( ds_status_visita ) VALUES ( 'EM ATENDIMENTO' );
INSERT INTO t_ec_status_visita ( ds_status_visita ) VALUES ( 'FREEZE' );
INSERT INTO t_ec_status_visita ( ds_status_visita ) VALUES ( 'OUTROS' );
SELECT * FROM t_ec_status_visita;

INSERT INTO t_ec_ramo_emp ( nm_ramo ) VALUES ( 'INDUSTRIA ALIMENTOS' );
INSERT INTO t_ec_ramo_emp ( nm_ramo ) VALUES ( 'METALURGICA' );
INSERT INTO t_ec_ramo_emp ( nm_ramo ) VALUES ( 'INDUSTRIA EMBALAGENS' );
SELECT * FROM t_ec_ramo_emp;

INSERT INTO T_EC_CAT_MAQUINAS (NM_CATEGORIA) VALUES('Injetora Hidráulica (plástico ou metal)');
INSERT INTO T_EC_CAT_MAQUINAS (NM_CATEGORIA) VALUES('Injetora Elétrica (plástico ou metal)');
INSERT INTO T_EC_CAT_MAQUINAS (NM_CATEGORIA) VALUES('Injetora Híbrida (plástico ou metal)');
INSERT INTO T_EC_CAT_MAQUINAS (NM_CATEGORIA) VALUES('Prensa');
INSERT INTO T_EC_CAT_MAQUINAS (NM_CATEGORIA) VALUES ( ' Máquina de Corte e Solda' );
SELECT * FROM T_EC_CAT_MAQUINAS;

INSERT INTO t_ec_cat_visita ( nm_visita ) VALUES ( 'manutenção' );
INSERT INTO t_ec_cat_visita ( nm_visita ) VALUES ( 'suporte' );
INSERT INTO t_ec_cat_visita ( nm_visita ) VALUES ( 'consultoria' );
INSERT INTO t_ec_cat_visita ( nm_visita ) VALUES ( 'prospecção' );
INSERT INTO t_ec_cat_visita ( nm_visita ) VALUES ( 'reunião executiva' );
SELECT * FROM  t_ec_cat_visita;

INSERT INTO t_ec_tipo_cliente (cod_tipo_cli,ds_tipo_cliente) VALUES ('C','CLIENTE');
INSERT INTO t_ec_tipo_cliente (cod_tipo_cli,ds_tipo_cliente) VALUES ('P','POTENCIAL CLIENTE');
SELECT * FROM t_ec_tipo_cliente;


INSERT INTO t_ec_status_maquina ( ds_status_maquina ) VALUES ( 'Ativa' );
INSERT INTO t_ec_status_maquina ( ds_status_maquina ) VALUES ( 'Inativa' );
SELECT * FROM t_ec_status_maquina;

INSERT INTO t_ec_status ( ds_status ) VALUES ( 'Ativado' );
INSERT INTO t_ec_status ( ds_status ) VALUES ( 'Desativado' );
SELECT * FROM  t_ec_status;


INSERT INTO t_ec_genero ( cod_genero, ds_genero ) VALUES ( 'M','Masculino');
INSERT INTO t_ec_genero ( cod_genero, ds_genero ) VALUES ( 'F','Feminino' );
SELECT * FROM  t_ec_genero;

INSERT INTO t_ec_tipo_cad (cod_tipo_cad,ds_tipo_cad ) VALUES ( 'P','Proprietário' );
INSERT INTO t_ec_tipo_cad (cod_tipo_cad,ds_tipo_cad ) VALUES ( 'E','Empresa');
SELECT * FROM  t_ec_status;


INSERT INTO T_EC_CADASTRO (nm_nome,nm_apelido_fantasia,cod_tipo_cad) values('Ricardo Frasson','Frasson','P');
INSERT INTO T_EC_CADASTRO (nm_nome,nm_apelido_fantasia,cod_tipo_cad) values('Industria Nacional Embalagens','INAE','E');
INSERT INTO T_EC_CADASTRO (nm_nome,nm_apelido_fantasia,cod_tipo_cad) values('Material Pronto','MATE','E');
SELECT * FROM  T_EC_CADASTRO ;

INSERT INTO T_EC_PROPRIETARIO VALUES(1,'02/06/1982','M');
SELECT * FROM  T_EC_PROPRIETARIO;

INSERT INTO T_EC_EMPRESA VALUES(2,'09822022000110',CURRENT_TIMESTAMP,'PROSPECCAO',3,'C');
INSERT INTO T_EC_EMPRESA VALUES(3,'01822022000110',CURRENT_TIMESTAMP,'PROSPECCAO',2,'P');
SELECT * FROM  T_EC_EMPRESA;

INSERT INTO t_ec_fab_maquinas ( nm_fabricante ) VALUES ( 'XCMG');
INSERT INTO t_ec_fab_maquinas ( nm_fabricante ) VALUES ( 'SANY');
INSERT INTO t_ec_fab_maquinas ( nm_fabricante ) VALUES ( 'VOLVO');
SELECT * FROM t_ec_fab_maquinas;


INSERT INTO t_ec_maquinas(cod_cadastro,cod_tipo_cli,nm_maquina,nr_serie_maquina,nr_ano_fab,nr_voltagem,cod_categoria_maq,cod_status_maquina,cod_fabricante,cod_pais) 
SELECT COD_CADASTRO,COD_TIPO_CLI,'XMAQ','220392921','2020','110',1,1,2,1 FROM t_ec_empresa where cod_cadastro=2; 

INSERT INTO t_ec_maquinas(cod_cadastro,cod_tipo_cli,nm_maquina,nr_serie_maquina,nr_ano_fab,nr_voltagem,cod_categoria_maq,cod_status_maquina,cod_fabricante,cod_pais) 
SELECT COD_CADASTRO,COD_TIPO_CLI,'XMAQ','220392922','2020','220',1,1,2,1 FROM t_ec_empresa where cod_cadastro=2; 
SELECT * FROM  T_EC_MAQUINAS;

INSERT INTO t_ec_fornecedor_iot ( ds_fornecedor ) VALUES ( 'ENOVO' );
INSERT INTO t_ec_fornecedor_iot ( ds_fornecedor ) VALUES ( 'TIVE' );
INSERT INTO t_ec_fornecedor_iot ( ds_fornecedor ) VALUES ( 'SAMSARA' );
INSERT INTO t_ec_fornecedor_iot ( ds_fornecedor ) VALUES ( 'ARM' );
SELECT * FROM t_ec_fornecedor_iot;

INSERT INTO t_ec_pais ( nm_pais ) VALUES ( 'BRASIL');
SELECT * FROM t_ec_pais;

INSERT INTO t_ec_cep_correios(cep_correios,nm_logradouro,nm_bairro,nm_cidade,nm_uf) VALUES ('05076000','RUA AFONSO SARDINHA','LAPA','SAO PAULO','SP');
SELECT * FROM t_ec_cep_correios;

INSERT INTO t_ec_endereco (cod_cadastro,numero,cep_correios) VALUES (2,'100','05076000');
SELECT * FROM  t_ec_endereco;

/* Gerar erro cliente em PROSPECCAO não permite cadastro de maquinas
INSERT INTO t_ec_maquinas(cod_cadastro,cod_tipo_cli,nm_maquina,nr_serie_maquina,nr_ano_fab,nr_voltagem,cod_categoria_maq,cod_status_maquina,cod_fabricante,cod_pais) 
SELECT COD_CADASTRO,COD_TIPO_CLI,'YMAQ','220392921','2020','110',1,1,2,1 FROM t_ec_empresa where cod_cadastro=3;

INSERT INTO t_ec_maquinas(cod_cadastro,cod_tipo_cli,nm_maquina,nr_serie_maquina,nr_ano_fab,nr_voltagem,cod_categoria_maq,cod_status_maquina,cod_fabricante,cod_pais) 
SELECT COD_CADASTRO,COD_TIPO_CLI,'XMAQ','220392921','2020','320',1,1,2,1 FROM t_ec_empresa where cod_cadastro=2; 


INSERT INTO t_ec_maquinas(cod_cadastro,cod_tipo_cli,nm_maquina,nr_serie_maquina,nr_ano_fab,nr_voltagem,cod_categoria_maq,cod_status_maquina,cod_fabricante,cod_pais) 
SELECT COD_CADASTRO,COD_TIPO_CLI,'XMAQ','220392921','2209','220',1,1,2,1 FROM t_ec_empresa where cod_cadastro=2; 

*/


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            19
-- CREATE INDEX                             3
-- ALTER TABLE                             40
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          10
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
